<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!--父目录只需要pom.xml文件即可，不用src目录，因为只是用来组织项目结构的，不存放任何业务代码-->


    <groupId>com.univ</groupId>
    <artifactId>mvn-modules</artifactId>
    <!--打包成pom，覆盖默认的jar，说明是作组织项目结构用-->
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>

    <!--组合模块-->
    <modules>
        <module>module-A</module>
        <module>module-B</module>
        <module>module-web</module>
        <module>module-C</module>
    </modules>

    <!--父模块中定义的所有属性也会被子模块继承-->
    <properties>
        <junit.version>4.13.1</junit.version>
    </properties>


    <!--所有的依赖都会被子模块继承，相当于子模块默认引入了这里的依赖-->
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>4.1</version>
        </dependency>

        <dependency>
            <groupId>ma.glasnost.orika</groupId>
            <artifactId>orika-core</artifactId>
            <version>1.5.2</version>
            <exclusions>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>
    <build>
        <!--所有的插件都会被子模块继承，相当于子模块默认引入了这里的插件-->
        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.7.9</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.1</version>
                <!--configuration标签下的每个配置项都是插件的一个属性-->
                <configuration>
                    <!--执行test阶段时是否忽略所有的测试-->
                    <skip>false</skip>
                    <!--要包含哪些测试类，当然支持正则形式的表达式，指定了包含的测试类，则未显示指定的测试类都将被忽略-->
                    <includes>
                        <include>com.univ.WebTest</include>
                    </includes>
                    <!--要排除哪些测试类，当然支持正则形式的表达式-->
                    <excludes>
                        <exclude>com.univ.ATest</exclude>
                    </excludes>
                </configuration>

                <!--&lt;!&ndash;定制插件goal的行为&ndash;&gt;
                <executions>
                    <execution>
                        &lt;!&ndash;这里也可以有配置项&ndash;&gt;
                        <configuration></configuration>
                        &lt;!&ndash;显示绑定到某个生命周期阶段,如果没有此标签，则说明是绑定到默认的生命周期阶段&ndash;&gt;
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>-->
            </plugin>
        </plugins>
    </build>

    <!--profile:在不同的环境有不同的配置，可以根据某些条件进行某个profile的激活，也可以设置默认的profile-->
    <!--pom.xml文件中可以设置profile，settings.xml中也可以设置profile-->
    <profiles>
        <profile>
            <id>qa</id>
            <activation>
                <!--默认指定启用qa环境-->
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>pre</id>
            <properties>
                <customer.version>在此profile中生效的属性</customer.version>
            </properties>
        </profile>

        <profile>
            <id>p1</id>
            <activation>
                <!--根据jdk的版本来是否启用此profile-->
                <jdk>1.7</jdk>
            </activation>
        </profile>

        <profile>
            <id>p2</id>
            <activation>
                <!--根据操作系统来决定是否启用此profile-->
                <os>
                    <name></name>
                    <version></version>
                    <family></family>
                    <arch></arch>
                </os>
            </activation>
        </profile>

        <profile>
            <id>p3</id>
            <activation>
                <!--根据文件是否存在来启用此profile-->
                <file>
                    <exists>xxx.abc</exists>
                </file>
            </activation>
        </profile>
    </profiles>

</project>